{{! template-lint-disable no-curly-component-invocation }}
<h1 id="title">
  Basic examples of the
  <code>modal-dialog</code>
  component
</h1>

<p>
  This component uses
  <code>ember-wormhole</code>
  to relocate the dialog in the DOM to better sit in a layer
  above the rest of your document.
</p>
<p>
  It requires no additional dependencies because
  <code>ember-wormhole</code>
  is included with this addon. If
  <code>liquid-wormhole</code>
  is installed, this component will detect it, and will become
  <LinkTo @route="animatable">animatable</LinkTo>
  if
  <code>animatable=true</code>
  is passed.
</p>

<DemoModal @id="example-basic" @title="Basic">
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get this.codeSnippets "basic-modal-dialog-hbs"}}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog @onClose={{D.closeModal}}>
        <h1>Stop! Modal Time!</h1>
        <p>Basic</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal
  @id="example-translucent"
  @title="With Translucent Overlay"
>
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "translucent-modal-dialog-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @translucentOverlay={{true}}
      >
        <h1>Stop! Modal Time!</h1>
        <p>With Translucent Overlay</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal
  @id="example-translucent-with-callback"
  @title="Translucent Overlay with Callback"
>
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "translucent-modal-dialog-with-callback-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @translucentOverlay={{true}}
        @onClickOverlay={{this.onClickTranslucentOverlay}}
      >
        <h1>Stop! Modal Time!</h1>
        <p>Translucent Overlay with Callback</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal
  @id="example-without-overlay"
  @title="Without Overlay"
>
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "modal-dialog-without-overlay-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @hasOverlay={{false}}
        @clickOutsideToClose={{true}}
      >
        <h1>Stop! Modal Time!</h1>
        <p>Without Overlay</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal
  @id="example-overlay-sibling"
  @title="With Overlay as a Sibling in the DOM"
>
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "translucent-modal-dialog-sibling-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @translucentOverlay={{true}}
        @overlayPosition="sibling"
      >
        <h1>Stop! Modal Time!</h1>
        <p>With Translucent Overlay as Sibling</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal @id="example-custom-styles" @title="Custom Styles">
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "custom-styles-modal-dialog-hbs"
      }}
      @language="hbs"
    />

    <CodeBlock
      @code={{get this.codeSnippets "custom-styles-css"}}
      @language="css"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @targetAttachment="none"
        @containerClass="custom-styles-modal-container"
        @overlayClass="custom-styles-overlay"
      >
        <h1>Stop! Modal Time!</h1>
        <p>Custom Styles</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal
  @id="example-target-selector"
  @onClose={{this.toggleTarget}}
  @title="Target (Selector)"
>
  <:menu as |M|>
    <M.OpenButton id="alignModalDialogToMe" />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "target-selector-modal-dialog-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @targetAttachment={{this.exampleTargetAttachment}}
        @attachment={{this.exampleAttachment}}
        @target="#alignModalDialogToMe"
      >
        <h1>Stop! Modal Time!</h1>
        <p>Target - Selector: "#alignModalDialogToMe"</p>
        <p>Target Attachment:
          {{this.exampleTargetAttachment}}</p>
        <p>Attachment: {{this.exampleAttachment}}</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal
  @id="example-target-element"
  @onClose={{this.toggleTarget}}
  @title="Target (Element)"
>
  <:menu as |M|>
    <span id="bwmde">
      <M.OpenButton />
    </span>
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "target-element-modal-dialog-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @targetAttachment={{this.exampleTargetAttachment}}
        @attachment={{this.exampleAttachment}}
        @target="#bwmde"
      >
        <h1>Stop! Modal Time!</h1>
        <p>Target - Element #bwmde</p>
        <p>Target Attachment:
          {{this.exampleTargetAttachment}}</p>
        <p>Attachment: {{this.exampleAttachment}}</p>
        <D.CloseButton />
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal @id="example-subclass" @title="Via Subclass">
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get this.codeSnippets "subclass-js"}}
      @language="js"
    />

    <CodeBlock
      @code={{get
        this.codeSnippets
        "subclass-modal-dialog-hbs"
      }}
      @language="hbs"
    />

    <CodeBlock
      @code={{get this.codeSnippets "subclass-styles-css"}}
      @language="css"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <MyCoolModalDialog
        @onClose={{D.closeModal}}
        @translucentOverlay={{true}}
      >
        <h1>Stop! Modal Time!</h1>
        <p>Via Subclass</p>
        <D.CloseButton />
      </MyCoolModalDialog>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal @id="example-subclass-2" @title="Via Subclass">
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get this.codeSnippets "subclass-js"}}
      @language="js"
    />

    <CodeBlock
      @code={{get
        this.codeSnippets
        "subclass-modal-dialog-2-hbs"
      }}
      @language="hbs"
    />

    <CodeBlock
      @code={{get this.codeSnippets "subclass-styles-css"}}
      @language="css"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <MyCoolModalDialogTwo
        @onClose={{D.closeModal}}
        @translucentOverlay={{true}}
      >
        <h1>Stop! Modal Time!</h1>
        <p>Via Subclass</p>
        <D.CloseButton />
      </MyCoolModalDialogTwo>
    {{/if}}
  </:default>
</DemoModal>

<DemoModal @id="example-in-place" @title="In Place">
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "in-place-modal-dialog-hbs"
      }}
      @language="hbs"
    />

    <CodeBlock
      @code={{get this.codeSnippets "in-place-css"}}
      @language="css"
    />
  </:code>

  <:default as |D|>
    <div id="container-in-place">
      I AM THE CONTAINER
      {{#if D.isModalOpen}}
        <ModalDialog
          @onClose={{D.closeModal}}
          @renderInPlace={{true}}
          @targetAttachment="none"
          @containerClass="ember-modal-dialog-in-place my-custom-class"
          @overlayClass="ember-modal-overlay-in-place"
        >
          <h1>Stop! Modal Time!</h1>
          <p>In Place</p>
          <D.CloseButton />
        </ModalDialog>
      {{/if}}
    </div>
  </:default>
</DemoModal>

<DemoModal @id="example-in-place-2" @title="In Place">
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "in-place-modal-dialog-2-hbs"
      }}
      @language="hbs"
    />

    <CodeBlock
      @code={{get this.codeSnippets "in-place-css"}}
      @language="css"
    />
  </:code>

  <:default as |D|>
    <div id="container-in-place-2">
      I AM THE CONTAINER
      {{#if D.isModalOpen}}
        <ModalDialog
          @onClose={{D.closeModal}}
          @renderInPlace={{true}}
          @targetAttachment="none"
          @containerClassNames="ember-modal-dialog-in-place my-custom-class-2"
          @overlayClassNames="ember-modal-overlay-in-place"
        >
          <h1>Stop! Modal Time!</h1>
          <p>In Place</p>
          <D.CloseButton />
        </ModalDialog>
      {{/if}}
    </div>
  </:default>
</DemoModal>

<DemoModal
  @id="example-centered-scrolling"
  @onClose={{this.onCloseCenteredScrolling}}
  @onOpen={{this.onOpenCenteredScrolling}}
  @title="Centered Scrolling"
>
  <:menu as |M|>
    <M.OpenButton />
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "centered-scrolling-modal-dialog-hbs"
      }}
      @language="hbs"
    />

    <CodeBlock
      @code={{get this.codeSnippets "centered-scrolling-css"}}
      @language="css"
    />
  </:code>

  <:default as |D|>
    <div id="container-centered-scrolling">
      {{#if D.isModalOpen}}
        <ModalDialog
          @onClose={{D.closeModal}}
          @translucentOverlay={{true}}
          @targetAttachment="none"
          @containerClass="centered-scrolling-container"
          @overlayClass="centered-scrolling-overlay"
          @wrapperClass="centered-scrolling-wrapper"
        >
          <h1>Really Long Content To Demonstrate Scrolling</h1>
          <ul>
            <li>Hover over modal and scroll</li>
            <li>Also hover over overlay and scroll</li>
          </ul>
          {{lorem-ipsum length=30000}}
          <D.CloseButton />
        </ModalDialog>
      {{/if}}
    </div>
  </:default>
</DemoModal>

<DemoModal @id="example-element-center" @title="Element Center">
  <:menu as |M|>
    <span id="elementCenter">
      <M.OpenButton />
    </span>
  </:menu>

  <:code>
    <CodeBlock
      @code={{get
        this.codeSnippets
        "element-centered-modal-dialog-hbs"
      }}
      @language="hbs"
    />
  </:code>

  <:default as |D|>
    {{#if D.isModalOpen}}
      <ModalDialog
        @onClose={{D.closeModal}}
        @elementId={{this.elementId}}
        @translucentOverlay={{true}}
        @targetAttachment="elementCenter"
        @target="#elementCenter"
      >
        <p>Centered on element.</p>
      </ModalDialog>
    {{/if}}
  </:default>
</DemoModal>