<h1 id="title">Basic examples of the <code>modal-dialog</code> component</h1>
<p>
  This component uses <code>ember-wormhole</code> to relocate the dialog in the
  DOM to better sit in a layer above the rest of your document.
</p>
<p>
  It requires no additional dependencies because <code>ember-wormhole</code> is included with
  this addon. If <code>liquid-wormhole</code> is installed, this component will detect it,
  and will become <LinkTo @route="animatable">animatable</LinkTo> if
  <code>animatable=true</code> is passed.
</p>

<div class="example" id="example-basic">
  <h2>Basic</h2>
  <button onclick={{action (mut this.isShowingBasic) true}}>Do It</button>
  <CodeSnippet @name="basic-modal-dialog.hbs" />
  {{#if this.isShowingBasic}}
    {{!-- BEGIN-SNIPPET basic-modal-dialog --}}
    <ModalDialog @onClose={{action (mut this.isShowingBasic) false}}>
      <h1>Stop! Modal Time!</h1>
      <p>Basic</p>
      <button onclick={{action (mut this.isShowingBasic) false}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-translucent">
  <h2>With Translucent Overlay</h2>
  <button onclick={{action (mut this.isShowingTranslucent) true}}>Do It</button>
  <CodeSnippet @name="translucent-modal-dialog.hbs" />
  {{#if this.isShowingTranslucent}}
    {{!-- BEGIN-SNIPPET translucent-modal-dialog --}}
    <ModalDialog @onClose={{action (mut this.isShowingTranslucent) false}} @translucentOverlay={{true}}>
      <h1>Stop! Modal Time!</h1>
      <p>With Translucent Overlay</p>
      <button onclick={{action (mut this.isShowingTranslucent) false}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-translucent-with-callback">
  <h2>Translucent Overlay with Callback</h2>
  <button onclick={{action (mut this.isShowingTranslucentWithCallback) true}}>Do It</button>
  <CodeSnippet @name="translucent-modal-dialog-with-callback.hbs" />
  {{#if this.isShowingTranslucentWithCallback}}
    {{!-- BEGIN-SNIPPET translucent-modal-dialog-with-callback --}}
    <ModalDialog @onClose={{action (mut this.isShowingTranslucentWithCallback) false}} @translucentOverlay={{true}} @onClickOverlay={{action "clickedTranslucentOverlay"}}>
      <h1>Stop! Modal Time!</h1>
      <p>Translucent Overlay with Callback</p>
      <button onclick={{action (mut this.isShowingTranslucentWithCallback) false}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-without-overlay">
  <h2>Without Overlay</h2>
  <button onclick={{action (mut this.isShowingWithoutOverlay) true}}>Do It</button>
  <CodeSnippet @name="modal-dialog-without-overlay.hbs" />
  {{#if this.isShowingWithoutOverlay}}
    {{!-- BEGIN-SNIPPET modal-dialog-without-overlay --}}
    <ModalDialog @onClose={{action (mut this.isShowingWithoutOverlay) false}} @hasOverlay={{false}} @clickOutsideToClose={{true}}>
      <h1>Stop! Modal Time!</h1>
      <p>Without Overlay</p>
      <button onclick={{action (mut this.isShowingWithoutOverlay) false}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-overlay-sibling">
  <h2>With Overlay as a Sibling in the DOM</h2>
  <button onclick={{action (mut this.isShowingSibling) true}}>Do It</button>
  <CodeSnippet @name="translucent-modal-dialog-sibling.hbs" />
  {{#if this.isShowingSibling}}
    {{!-- BEGIN-SNIPPET translucent-modal-dialog-sibling --}}
    <ModalDialog @onClose={{action (mut this.isShowingSibling) false}} @translucentOverlay={{true}} @overlayPosition="sibling">
      <h1>Stop! Modal Time!</h1>
      <p>With Translucent Overlay as Sibling</p>
      <button onclick={{action (mut this.isShowingSibling) false}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-custom-styles">
  <h2>Custom Styles</h2>
  <button onclick={{action (mut this.isShowingCustomStyles) true}}>Do It</button>
  <CodeSnippet @name="custom-styles-modal-dialog.hbs" />
  <CodeSnippet @name="custom-styles.scss" />
  {{#if this.isShowingCustomStyles}}
    {{!-- BEGIN-SNIPPET custom-styles-modal-dialog --}}
    <ModalDialog @onClose={{action (mut this.isShowingCustomStyles) false}} @targetAttachment="none" @containerClass={{this.customContainerClassNames}} @overlayClass="custom-styles-overlay">
      <h1>Stop! Modal Time!</h1>
      <p>Custom Styles</p>
      <button onclick={{action (mut this.isShowingCustomStyles) false}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-target-selector">
  <h2>Target (Selector)</h2>
  <div class="targetContainer">
    <button id="alignModalDialogToMe" {{action "toggleTargetSelector"}}>Do It</button>
  </div>
  <CodeSnippet @name="target-selector-modal-dialog.hbs" />
  {{#if this.isShowingTargetSelector}}
    {{!-- BEGIN-SNIPPET target-selector-modal-dialog --}}
    <ModalDialog @onClose={{action "toggleTargetSelector"}} @targetAttachment={{this.exampleTargetAttachment}} @attachment={{this.exampleAttachment}} @target="#alignModalDialogToMe">
      <h1>Stop! Modal Time!</h1>
      <p>Target - Selector: "#alignModalDialogToMe"</p>
      <p>Target Attachment: {{this.exampleTargetAttachment}}</p>
      <p>Attachment: {{this.exampleAttachment}}</p>
      <button {{action "closeTargetSelector"}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-target-element">
  <h2>Target (Element)</h2>
  <div class="targetContainer">
    <span id="bwmde">
      <button {{action "toggleTargetElement"}}>Do It</button>
    </span>
  </div>
  <CodeSnippet @name="target-element-modal-dialog.hbs" />
  {{#if this.isShowingTargetElement}}
    {{!-- BEGIN-SNIPPET target-element-modal-dialog --}}
    <ModalDialog @onClose={{action "toggleTargetElement"}} @targetAttachment={{this.exampleTargetAttachment}} @attachment={{this.exampleAttachment}} @target="#bwmde">
      <h1>Stop! Modal Time!</h1>
      <p>Target - Element #bwmde</p>
      <p>Target Attachment: {{this.exampleTargetAttachment}}</p>
      <p>Attachment: {{this.exampleAttachment}}</p>
      <button {{action "closeTargetElement"}}>Close</button>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-subclass">
  <h2>Via Subclass</h2>
  <button onclick={{action (mut this.isShowingSubclassed) true}}>Do It</button>
  <CodeSnippet @name="subclass.js" />
  <CodeSnippet @name="subclass-modal-dialog.hbs" />
  <CodeSnippet @name="subclass-styles.scss" />
  {{#if this.isShowingSubclassed}}
    {{!-- BEGIN-SNIPPET subclass-modal-dialog --}}
    <MyCoolModalDialog @onClose={{action (mut this.isShowingSubclassed) false}} @translucentOverlay={{true}}>
      <h1>Stop! Modal Time!</h1>
      <p>Via Subclass</p>
      <button onclick={{action (mut this.isShowingSubclassed) false}}>Close</button>
    </MyCoolModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-subclass-2">
  <h2>Via Subclass</h2>
  <button onclick={{action (mut this.isShowingSubclassed2) true}}>Do It</button>
  <CodeSnippet @name="subclass.js" />
  <CodeSnippet @name="subclass-modal-dialog-2.hbs" />
  <CodeSnippet @name="subclass-styles.scss" />
  {{#if this.isShowingSubclassed2}}
    {{!-- BEGIN-SNIPPET subclass-modal-dialog-2 --}}
    <MyCoolModalDialogTwo @onClose={{action (mut this.isShowingSubclassed2) false}} @translucentOverlay={{true}}>
      <h1>Stop! Modal Time!</h1>
      <p>Via Subclass</p>
      <button onclick={{action (mut this.isShowingSubclassed2) false}}>Close</button>
    </MyCoolModalDialogTwo>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>

<div class="example" id="example-in-place">
  <h2>In Place</h2>
  <button onclick={{action (mut this.isShowingInPlace) true}}>Do It</button>
  <CodeSnippet @name="in-place-modal-dialog.hbs" />
  <CodeSnippet @name="in-place.scss" />
  <div id="container-in-place">
    I AM THE CONTAINER
    {{#if this.isShowingInPlace}}
      {{!-- BEGIN-SNIPPET in-place-modal-dialog --}}
      <ModalDialog @onClose={{action (mut this.isShowingSubclassed) false}} @renderInPlace={{true}} @targetAttachment="none" @containerClass="ember-modal-dialog-in-place" @overlayClass="ember-modal-overlay-in-place">
        <h1>Stop! Modal Time!</h1>
        <p>In Place</p>
        <button onclick={{action (mut this.isShowingInPlace) false}}>Close</button>
      </ModalDialog>
      {{!-- END-SNIPPET --}}
    {{/if}}
  </div>
</div>

<div class="example" id="example-centered-scrolling">
  <h2>Centered Scrolling</h2>
  <button {{action "toggleCenteredScrolling"}}>Do It</button>
  <CodeSnippet @name="centered-scrolling-modal-dialog.hbs" />
  <CodeSnippet @name="centered-scrolling.scss" />
  <div id="container-centered-scrolling">
    {{#if this.isShowingCenteredScrolling}}
      {{!-- BEGIN-SNIPPET centered-scrolling-modal-dialog --}}
      <ModalDialog @onClose={{action "toggleCenteredScrolling"}} @translucentOverlay={{true}} @targetAttachment="none" @containerClass="centered-scrolling-container" @overlayClass="centered-scrolling-overlay" @wrapperClass="centered-scrolling-wrapper">
        <h1>Really Long Content To Demonstrate Scrolling</h1>
        <ul>
          <li>Hover over modal and scroll</li>
          <li>Also hover over overlay and scroll</li>
        </ul>
        {{lorem-ipsum length=30000}}
        <button {{action "toggleCenteredScrolling"}}>Close</button>
      </ModalDialog>
      {{!-- END-SNIPPET --}}
    {{/if}}
  </div>
</div>

<div class="example">
  <h2>Element Center</h2>
  <span id="elementCenter">
    <button onclick={{action (mut this.isShowingElementCenterModal) true}}>Do It</button>
  </span>
  <CodeSnippet @name="element-centered-modal-dialog.hbs" />
  {{#if this.isShowingElementCenterModal}}
    {{!-- BEGIN-SNIPPET element-centered-modal-dialog --}}
    <ModalDialog @onClose={{action (mut this.isShowingElementCenterModal) false}} @elementId={{this.elementId}} @translucentOverlay={{true}} @targetAttachment="elementCenter" @target="#elementCenter">
      <p>Centered on element.</p>
    </ModalDialog>
    {{!-- END-SNIPPET --}}
  {{/if}}
</div>
